openapi: 3.0.0
info:
    title: Hockey Tracker Api
    description: Api to retrieve and update hockey statistics for rec teams
    version: 0.0.1

servers:
    - url: http://localhost:3000/api/v2
      description: local dev

paths:
    /liveness:
        get:
            summary: Health Check
            description: Checks if the application is up and running
            responses:
                '200':
                    description: OK
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: We are live baby!

    /seasons:
        get:
            summary: Hockey Seasons
            description: Gets a list of all Seasons

    /player:
        post:
            summary: Create a new player
            description: Creates a new player based on a first name and surname that was passed in
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - firstName
                                - surname
                            properties:
                                firstName:
                                    type: string
                                    example: John
                                surname:
                                    type: string
                                    example: Doe
            responses:
                '403':
                    description: Unauthorised
                '500':
                    description: Server error

        get:
            summary: Get all players
            description: Retrieves a list of all players
            responses:
                '200':
                    description: A list of players
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Player'
                '404':
                    description: No players found
                '403':
                    description: Unauthorised
                '500':
                    description: Server error

    /player/{playerId}:
        get:
            summary: Get player by ID
            description: Retrieves a player by their unique playerId
            parameters:
                - name: playerId
                  in: path
                  required: true
                  description: Unique Player ID in the format PLR followed by 6 digits (e.g., PLR123456)
                  schema:
                      type: string
                      pattern: '^PLR\d{6}$'
                      example: PLR123456
            responses:
                '200':
                    description: Player found successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Player'
                '400':
                    description: Invalid playerId format
                '404':
                    description: Player not found
                '403':
                    description: Unauthorised
                '500':
                    description: Server error

        delete:
            summary: Delete player by ID
            description: Deletes a player using their unique playerId
            parameters:
                - name: playerId
                  in: path
                  required: true
                  description: Unique Player ID in the format PLR followed by 6 digits (e.g., PLR123456)
                  schema:
                      type: string
                      pattern: '^PLR\d{6}$'
                      example: PLR123456
            responses:
                '204':
                    description: Player deleted successfully (no content)
                '400':
                    description: Invalid playerId format
                '404':
                    description: Player not found
                '403':
                    description: Unauthorised
                '500':
                    description: Server error
        patch:
            summary: Update player details
            description: Updates a player's first name and surname using their unique playerId
            parameters:
                - name: playerId
                  in: path
                  required: true
                  description: Unique Player ID in the format PLR followed by 6 digits (e.g., PLR123456)
                  schema:
                      type: string
                      pattern: '^PLR\d{6}$'
                      example: PLR123456
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - firstName
                                - surname
                            properties:
                                firstName:
                                    type: string
                                    example: John
                                surname:
                                    type: string
                                    example: Doe
                        responses:
                            '204':
                                description: Player updated successfully (no content)
                            '304':
                                description: Player not modified
                            '400':
                                description: Invalid playerId format or request body
                            '403':
                                description: Unauthorised
                            '500':
                                description: Server error

components:
    schemas:
        Season:
            type: object
            properties:
                id:
                    type: string
                    example: 'SSN100'
                name:
                    type: string
                    example: '23/24'

        Player:
            type: object
            properties:
                _id:
                    type: string
                    example: 'PLR127841'
                firstName:
                    type: string
                    example: 'John'
                surname:
                    type: string
                    example: 'Doe'
            required:
                - _id
                - firstName
                - surname
